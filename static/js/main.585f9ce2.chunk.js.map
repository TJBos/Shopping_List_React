{"version":3,"sources":["components/editForm.js","components/createForm.js","components/display.js","App.js","reportWebVitals.js","index.js"],"names":["EditForm","props","React","useState","item","editData","setEditData","handleChange","event","target","name","value","onSubmit","preventDefault","setShoppingItems","shoppingItems","filter","x","history","push","type","onChange","placeholder","qty","price","category","Form","styled","form","CreateForm","formData","setFormData","Main","div","ShoppingList","ListItem","Display","setCrossedItems","crossedItems","setSelectedItem","filteredItems","toLowerCase","indexOf","substr","toggleClick","itemName","id","find","console","log","includes","sort","a","b","fa","fb","map","onClick","selectItem","subTotal","MakeSubTotal","App","selectedItem","className","exact","path","render","rp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.585f9ce2.chunk.js","sourcesContent":["import React from \"react\";\n\n//EditForm component that can edit name and add quantity, price, category\nconst EditForm = (props) => {\n  const [editData, setEditData] = React.useState(props.item);\n\n  //function handles form submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.setShoppingItems([\n      ...props.shoppingItems.filter((x) => x !== props.item),\n      editData,\n    ]);\n    props.history.push(\"/\");\n  };\n\n  //binding function that controls state of inputs\n  const handleChange = (event) => {\n    setEditData({ ...editData, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={editData.name}\n        onChange={handleChange}\n      />\n      <input\n        type=\"number\"\n        name=\"qty\"\n        placeholder=\"enter quantity\"\n        value={editData.qty}\n        onChange={handleChange}\n      />\n      <input\n        type=\"number\"\n        name=\"price\"\n        placeholder=\"enter price\"\n        value={editData.price}\n        onChange={handleChange}\n      />\n      <input\n        type=\"text\"\n        name=\"category\"\n        placeholder=\"enter category\"\n        value={editData.category}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" value=\"Edit\">\n        Edit\n      </button>\n    </form>\n  );\n};\n\nexport default EditForm;\n","import \"../App.css\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n//Styled components\nconst Form = styled.form`\n  width: 50%;\n  margin-left: 30px;\n`;\n\n//CreateForm component to create a new item\nconst CreateForm = (props) => {\n  const { formData, setFormData, shoppingItems, setShoppingItems } = props;\n\n  //function handles submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setShoppingItems([...shoppingItems, formData]);\n    setFormData({ name: \"\" });\n  };\n\n  //binding function that controls state of form input\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"enter item\"\n        name=\"name\"\n        onChange={handleChange}\n        value={formData.name}\n      />\n      <button type=\"submit\">Create</button>\n    </Form>\n  );\n};\n\nexport default CreateForm;\n","import \"../App.css\";\nimport React from \"react\";\nimport CreateForm from \"./createForm\";\nimport styled from \"styled-components\";\n\n//Styled Components\n\nconst Main = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nconst ShoppingList = styled.div`\n  border: 1px solid black;\n  width: 40%;\n  text-align: center;\n`;\n\nconst ListItem = styled.div`\n  border: 1px solid black;\n  border-radius: 10px;\n  width: 75%;\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n`;\n\n//The functional component\n\nconst Display = (props) => {\n  const {\n    shoppingItems,\n    setShoppingItems,\n    setCrossedItems,\n    crossedItems,\n    setSelectedItem,\n  } = props;\n\n  //formData has the dynamic state from the text input\n  const [formData, setFormData] = React.useState({ name: \"\" });\n\n  //filter based on substring matching on what's typed in the text input\n  let filteredItems = shoppingItems.filter((item) => {\n    return (\n      item.name\n        .toLowerCase()\n        .indexOf(formData.name.substr(0, 20).toLowerCase()) !== -1\n    );\n  });\n  //selector funtion\n  const selectItem = (item) => {\n    setSelectedItem(item);\n  };\n\n  //A toggle function to move items from pending list to crossed off list\n  const toggleClick = (event) => {\n    let itemName = event.target.id;\n    let item =\n      shoppingItems.find((x) => x.name === itemName) ||\n      crossedItems.find((x) => x.name === itemName);\n    console.log(item);\n    if (shoppingItems.includes(item)) {\n      setCrossedItems([...crossedItems, item]);\n      setShoppingItems(shoppingItems.filter((x) => x !== item));\n    } else if (crossedItems.includes(item)) {\n      setShoppingItems([...shoppingItems, item]);\n      setCrossedItems(crossedItems.filter((x) => x !== item));\n    }\n  };\n\n  //A sort comparison function to sort alphabetically based on a key\n  const sortFtn = (a, b) => {\n    let fa = a.name.toLowerCase(),\n      fb = b.name.toLowerCase();\n    if (fa < fb) {\n      return -1;\n    }\n    if (fa > fb) {\n      return 1;\n    }\n    return 0;\n  };\n\n  //function to calculate subtotal when prices and quantities are available\n  const MakeSubTotal = () => {\n    let subTotal = 0;\n    for (let item of shoppingItems) {\n      if (item.qty && item.price) subTotal += item.qty * item.price;\n    }\n    return (\n      <div>\n        <h4>Subtotal: ${subTotal}</h4>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <CreateForm\n        shoppingItems={shoppingItems}\n        setShoppingItems={setShoppingItems}\n        formData={formData}\n        setFormData={setFormData}\n      />\n      <Main>\n        <ShoppingList>\n          <h2>Pending</h2>\n\n          {filteredItems.sort(sortFtn).map((item) => (\n            <ListItem id={item.name} onClick={toggleClick}>\n              <div>{item.name}</div>\n              <div>Qty: {item.qty}</div>\n              <div>Price: ${item.price}</div>\n              <button\n                onClick={() => {\n                  selectItem(item);\n                  props.history.push(\"/edit\");\n                }}\n              >\n                Edit\n              </button>\n            </ListItem>\n          ))}\n          {MakeSubTotal()}\n        </ShoppingList>\n        <ShoppingList>\n          <h2>Crossed off</h2>\n\n          {crossedItems.map((item) => (\n            <ListItem id={item.name} onClick={toggleClick}>\n              {item.name}\n            </ListItem>\n          ))}\n        </ShoppingList>\n      </Main>\n    </>\n  );\n};\n\nexport default Display;\n","import \"./App.css\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport EditForm from \"./components/editForm\";\nimport Display from \"./components/display\";\n\nfunction App() {\n  const [shoppingItems, setShoppingItems] = React.useState([\n    { name: \"milk\", qty: 1, price: 3, category: \"beverage\" },\n    { name: \"carrot\", qty: 2, price: 1, category: \"vegetables\" },\n    { name: \"tomato\", qty: 5, price: 2, category: \"vegetables\" },\n    { name: \"juice\", qty: 2, price: 4, category: \"beverages\" },\n    { name: \"bacon\", qty: 1, price: 3, category: \"breakfast\" },\n    { name: \"bathsoap\", qty: 2, price: 8, category: \"consumables\" },\n  ]);\n  const [crossedItems, setCrossedItems] = React.useState([\n    { name: \"apples\", qty: 2, price: 1, category: \"fruit\" },\n  ]);\n\n  const [selectedItem, setSelectedItem] = React.useState({});\n\n  return (\n    <div className=\"app\">\n      <h1>Shopping List</h1>\n\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(rp) => (\n            <Display\n              {...rp}\n              shoppingItems={shoppingItems}\n              setShoppingItems={setShoppingItems}\n              crossedItems={crossedItems}\n              setCrossedItems={setCrossedItems}\n              setSelectedItem={setSelectedItem}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/edit\"\n          render={(rp) => (\n            <EditForm\n              {...rp}\n              shoppingItems={shoppingItems}\n              setShoppingItems={setShoppingItems}\n              item={selectedItem}\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}